// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts Post[]
  comments Comment[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  title String
  slug String @unique
  content String @db.Text
  image String?
  view Int @default(0)
  nbComments Int @default(0)

  userEmail String
  user User @relation(fields: [userEmail], references: [email])

  catSlug String
  cat Category @relation(fields: [catSlug], references: [slug])

  comments Comment[]


  @@index([catSlug])
  @@index([userEmail])
}

model Category {
  id String @id @default(cuid())
  slug String @unique
  title String
  image String?
  posts Post[]
}

model Comment {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  content String

  userEmail String
  user User @relation(fields: [userEmail], references: [email])

  postSlug String
  post Post @relation(fields: [postSlug], references: [slug])


  @@index([userEmail])
  @@index([postSlug])
}
